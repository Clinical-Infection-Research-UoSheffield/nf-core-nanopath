/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].toLowerCase()}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]

    withName: SAMPLESHEET_CHECK {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: CAT_FASTQS {
        publishDir = [
            path: { "${params.outdir}/cat" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    
    withName: FASTP {
        ext.args = [
            "-l ${params.min_read_length}",
            "--length_limit ${params.max_read_length}"
        ].join(' ').trim()
    }

    withName: FASTQC {
        ext.args = '--quiet'
    }

    withName: KRAKEN2_KRAKEN2 {
        cpus = 4
        memory = { 4.GB * task.attempt }
        errorStrategy = { task.exitStatus in 137..140 ? 'retry': 'finish' }
        maxRetries = 2
    }

    withName: SUBSET_READS {
        publishDir = [
            enabled: false
        ]
    }

    withName: KMER_FREQS {
        errorStrategy = { task.exitStatus in 137..140 ? 'retry': task.exitStatus == 72 ? 'ignore' : 'finish' }
        cpus = 4
        memory = { 4.GB * task.attempt }
        time = { 1.hour * task.attempt }
        maxRetries = 3
    }

    withName: READ_CLUSTERING {
        errorStrategy = { task.exitStatus in 137..140 ? 'retry': task.exitStatus == 73 ? 'ignore' : 'finish' }
        ext.args = [
            "--umap_n_neighbors ${params.umap_n_neighbors}",
            "--umap_min_dist ${params.umap_min_dist}",
            "--min_samples ${params.min_samples}",
            "--min_cluster_size ${params.min_cluster_size}",
            "--cluster_sel_epsilon ${params.cluster_sel_epsilon}"
        ].join(' ').trim()
        containerOptions = "--env NUMBA_CACHE_DIR=/tmp"
    }

    withName: CANU_CORRECTION {
        cpus = 4
        memory = { 4.GB * task.attempt }
        maxRetries = 3
        ext.args = [
            "stopOnLowCoverage=${params.stopOnLowCoverage}",
            "minInputCoverage=${params.minInputCoverage}",
            "minReadLength=${params.minReadLength}",
            "minOverlapLength=${params.minOverlapLength}",
            "useGrid=${params.useGrid}"
        ].join(' ').trim()
    }

    withName: DRAFT_SELECTION {
        cpus = 4
        errorStrategy = { task.exitStatus == 73 ? 'ignore' : 'finish'}
    }

    withName: RACON_PASS { 
        cpus = 2
        memory = { 4.GB * task.attempt }
        time = { 1.hour * task.attempt }
        errorStrategy = { task.exitStatus in 137..140 ? 'retry' : 'finish' }
        maxRetries = 3
    }

    withName: MEDAKA_PASS {
      cpus = 1
      memory = { 4.GB * task.attempt }
      time = { 1.hour * task.attempt }
      errorStrategy = { task.exitStatus in 137..140 ? 'retry' : 'finish' }
      maxRetries = 3
    }

    withName: CUSTOM_DUMPSOFTWAREVERSIONS {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: params.publish_dir_mode,
            pattern: '*_versions.yml'
        ]
    }

}
